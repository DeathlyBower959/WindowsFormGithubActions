# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  SOLUTION_PATH: GithubActionsTesting/GithubActionsTesting.sln
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_PATH }}
    
    - name: Build the Solution
      run: msbuild ${{ env.SOLUTION_PATH }} /p:Configuration=Release

    - uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

    - uses: csexton/release-asset-action@v2
      with:
          github-token: ${{ secrets.GH_TOKEN }}
          pattern: GithubActionsTesting/bin/Release/netcoreapp3.1/win-x64/publish/*.exe
          release-url: ${{ steps.create_release.outputs.upload_url }}